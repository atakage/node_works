NodeTest 수정



-------------------------login.pug--------------------------------------------------아래


include include-head

style
    include ../css/login.css

script.

    function removeSpace(obj){
        var val = $('.joinPass').val().replace(/ /gi,'')
        $('.joinPass').val(val)
    }



    $(function(){

        var checkIdSW = 0
        
        $('.joinId').keyup(function(event){
            if(!(event.keyCode >= 37 && event.keyCode <= 40)){
                var inputVal = $(this).val()
                $(this).val(inputVal.replace(/[^a-z0-9]/gi,''))
            }
        })



        $('.checkIdBtn').click(function(){
            var id = $('.joinId').val()
            
            $.ajax({
                url:'/member/checkid', data:{id:id}, type:'post',
                success:function(result){
                    if(result == 'CHECKOK'){
                        alert('확인 완료')
                        checkIdSW = 1
                    }else{
                        alert('이미 존재하는 아이디입니다')
                        checkIdSW = 0
                    }
                }
            })
        })





        $('.joinBtn').click(function(){

            if($('.joinId').val().length > 8 || $('.joinId').val().length < 4){
                alert('아이디는 4자 이상 8자 이하입니다')
                $('.joinId').focus()
                return false
            }

           

            if($('.joinPass').val().length < 10){
                alert('비밀번호는 10자 이상입니다')
                $('.joinPass').focus()
                return false
            }

            if($('.joinPass').val() != $('.joinRePass').val()){
                alert('비밀번호를 다시 확인해주세요')
                $('.joinPass').focus()
                return false
            }

            if(checkIdSW != 1){
                alert('아이디 중복 체크가 필요합니다')
                return false
            }

            $('.joinForm').submit()
        })
    })

body

    div.loginAndJoinBoxDiv
        div.loginBox
            form(action="/member/login", method="post")
                div.logTitle LOGIN
                div
                    input(placeholder='ID', maxlength='8').logId
                div
                    input(type='password', maxlength='20', placeholder='PASSWORD').logPass
                div
                    button(type='button').loginBtn 로그인
        div.joinBox
            form(action="/member/join", method="post").joinForm
                div.joinTitle 빠른 회원가입
                div.idAndCheckBoxDiv
                    div
                        input(placeholder='아이디(4자 이상 8자 이하)', maxlength='8', name='id').joinId
                    div
                        button(type='button').checkIdBtn 중복 체크
                div
                    input(type='password', maxlength='20',placeholder='비밀번호(10자 이상)', name='password', onkeyup="removeSpace(this);").joinPass
                div
                    input(type='password', maxlength='20',placeholder='비밀번호 확인').joinRePass
                div
                    select(name="grade")
                        option(value="N") 일반(민원)
                        option(value="P") 공무원
                div(style="text-align:right")
                    button(type='button').joinBtn 가입






--------------------------------------------------------------------------------------------------------------------------------------




프로젝트 root에 models 폴더 생성 후 member.js 만들기


member테이블
(_id) unique
id(8) not null
password(20) not null
grade(1) not null


npm install mongoose
mongodb 접속 후 use dumpdb로 dbㅅ행성
app.js에서 mongo 설정

----------------------------------------------------login.css-------------------------------------------------------------------- 아래


.loginAndJoinBoxDiv {
  margin: 0 auto;
  margin-top: 5%;
  width: fit-content;
}

.loginBox {
  border: 3px solid coral;
  width: 400px;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
}

.logTitle {
  font-weight: bold;
  font-size: large;
  background-color: coral;
  margin-bottom: 5%;
}

.loginBtn {
  margin-top: 5%;
  border: 2px solid coral;
}

.joinBox {
  border: 3px solid coral;
  width: 400px;
  padding: 20px;
  border-radius: 10px;
  margin-top: 5%;
}

.joinTitle {
  font-weight: bold;
  font-size: large;
  background-color: coral;
  margin-bottom: 5%;
  text-align: center;
}

.joinBtn {
  margin-top: 5%;
  border: 2px solid coral;
}

.idAndCheckBoxDiv {
  display: flex;
}

.checkIdBtn {
  font-size: small;
}

-------------------------------------------------------------------------------



---------------------------------------------member.js--------------------------------------------------------아래


var mongoose = require("mongoose");
var memberModel = mongoose.Schema({
  id: {
    type: String,
    required: true,
    unique: true,
  },

  password: {
    type: String,
    required: true,
  },

  grade: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("tbl_member", memberModel);

----------------------------------------------------------------------------------------------------------



------------------------------------------memberRouter.js------------------------------------------------아래

var express = require("express");
var router = express.Router();
var memberVO = require("../models/member");

router.get("/login", function (req, res) {
  res.render("login");
});

router.post("/checkid", function (req, res) {
  console.log(req.body.id);

  memberVO.findOne({ id: req.body.id }, function (err, data) {
    if (data == null) {
      res.end("CHECKOK");
    }
    res.end("NO");
  });
});

router.post("/join", function (req, res) {
  let id = req.body.id.replace(/ /g, "");
  let password = req.body.password.replace(/ /g, "");
  let grade = req.body.grade.replace(/ /g, "");

  console.log(JSON.stringify(req.body));

  // server에서 2차 검사
  if (
    id.length > 8 ||
    id.length < 4 ||
    password.length < 10 ||
    password.length > 20 ||
    !grade == "N" ||
    !grade == "P"
  ) {
    res.redirect("/member/login");
  }

  console.log("검증통과");
  var joinMemberVO = new memberVO(req.body);

  console.log("생성완료");

  joinMemberVO.save(req.body, function (err, data) {
    res.redirect("/");
  });
});

module.exports = router;


-------------------------------------------------------------------------------------------------------------------------------
07076063226


20200618



npm install --save express-session, cookie-parser




------------------------------------------------------memberRouter.js-----------------------------------------------아래

var express = require("express");
var router = express.Router();
var memberVO = require("../models/member");

router.get("/login", function (req, res) {
  // let session = req.session;
  res.render("login");
});

router.post("/login", async function (req, res, next) {
  console.log(JSON.stringify(req.body));

  let id = req.body.id;
  let password = req.body.password;

  memberVO.findOne(
    {
      id: id,
      password: password,
    },
    // db select 후 result(data)값 size(length) 추출법
    function (err, data) {
      if (data == null) {
        res.end("FAIL");
        res.redirect("/");
      } else {
        req.session.userid = data.id;

        res.end("LOGINOK");
        console.log(data.id);

        //res.render();
      }
    }
  );
});

router.post("/checkid", function (req, res) {
  console.log(req.body.id);

  memberVO.findOne({ id: req.body.id }, function (err, data) {
    if (data == null) {
      res.end("CHECKOK");
    }
    res.end("NO");
  });
});

router.post("/join", function (req, res) {
  let id = req.body.id.replace(/ /g, "");
  let password = req.body.password.replace(/ /g, "");
  let grade = req.body.grade.replace(/ /g, "");

  console.log(JSON.stringify(req.body));

  // server에서 2차 검사
  if (
    id.length > 8 ||
    id.length < 4 ||
    password.length < 10 ||
    password.length > 20 ||
    !grade == "N" ||
    !grade == "P"
  ) {
    res.redirect("/member/login");
  }

  console.log("검증통과");
  var joinMemberVO = new memberVO(req.body);

  console.log("생성완료");

  joinMemberVO.save(req.body, function (err, data) {
    res.redirect("/");
  });
});

module.exports = router;



------------------------------------------------------------------------------------------------------------------------------------------



--------------------------------------------------------------------include-head.pug-----------------------------------아래



head
  meta(charset='UTF-8')
  meta(name='viewport', content='width=device-width,initial-scale=1')
  script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js")
  link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css")
  script(src="https://code.jquery.com/jquery-latest.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js")
  script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js")

  style
    include ../css/include-head.css


div.headerTitle 불법투기 신고 시스템

nav.navbar.navbar-expand-sm
  ul.navbar-nav
    li.nav-item
      a.nav-link(href="#") 신고현황
    li.nav-item
      a.nav-link(href="/report/dumpReport") 투기신고
    li.nav-item
      a.nav-link(href="#") 문의&답변  
    li.nav-item
  ul.navbar-nav.ml-auto
    if userid
      a.nav-link(href="/member/login") 로그아웃  
    else  
      a.nav-link(href="/member/login") 로그인 
  
      

--------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------login.pug-------------------------------------------------

include include-head

style
    include ../css/login.css

script.

    function removeSpace(obj){
        var val = $('.joinPass').val().replace(/ /gi,'')
        $('.joinPass').val(val)
    }



    $(function(){

        var checkIdSW = 0
        
        $('.joinId').keyup(function(event){
            if(!(event.keyCode >= 37 && event.keyCode <= 40)){
                var inputVal = $(this).val()
                $(this).val(inputVal.replace(/[^a-z0-9]/gi,''))
            }
        })

        $('.logId').keyup(function(event){
            if(!(event.keyCode >= 37 && event.keyCode <= 40)){
                var inputVal = $(this).val()
                $(this).val(inputVal.replace(/[^a-z0-9]/gi,''))
            }
        })



        $('.checkIdBtn').click(function(){
            var id = $('.joinId').val()
            
            $.ajax({
                url:'/member/checkid', data:{id:id}, type:'post',
                success:function(result){
                    if(result == 'CHECKOK'){
                        alert('확인 완료')
                        checkIdSW = 1
                    }else{
                        alert('이미 존재하는 아이디입니다')
                        checkIdSW = 0
                    }
                }
            })
        })





        $('.joinBtn').click(function(){

            if($('.joinId').val().length > 8 || $('.joinId').val().length < 4){
                alert('아이디는 4자 이상 8자 이하입니다')
                $('.joinId').focus()
                return false
            }

           

            if($('.joinPass').val().length < 10){
                alert('비밀번호는 10자 이상입니다')
                $('.joinPass').focus()
                return false
            }

            if($('.joinPass').val() != $('.joinRePass').val()){
                alert('비밀번호를 다시 확인해주세요')
                $('.joinPass').focus()
                return false
            }

            if(checkIdSW != 1){
                alert('아이디 중복 체크가 필요합니다')
                return false
            }

            $('.joinForm').submit()
        })



        $('.loginBtn').click(function(){
            
            if($('.logId').val().length < 1){
                alert('아이디를 입력해주세요')
                $('.logId').focus()
                return false
            }

            if($('.logPass').val().length < 1){
                alert('비밀번호를 입력해주세요')
                $('.logPass').focus()
                return false
            }

            
            var id = $('.logId').val()
            var password = $('.logPass').val()
            $.ajax({
                url:'/member/login', data:{id:id, password:password}, type:'post',
                success:function(result){
                    if(result == 'LOGINOK'){
                        alert('로그인 성공')
                        document.location.href = '/'
                    }else{
                        alert('아이디와 비밀번호를 확인해주세요')
                        return false
                    }
                }, error:function(){
                    alert('서버 에러')
                }
            })
            

        })
    })

body

    div.loginAndJoinBoxDiv
        div.loginBox
            form(action="/member/login", method="post").loginForm
                div.logTitle LOGIN
                div
                    input(placeholder='ID', maxlength='8', name='id').logId
                div
                    input(type='password', maxlength='20', name='password', placeholder='PASSWORD', onkeyup="removeSpace(this);").logPass
                div
                    button(type='button').loginBtn 로그인
        div.joinBox
            form(action="/member/join", method="post").joinForm
                div.joinTitle 빠른 회원가입
                div.idAndCheckBoxDiv
                    div
                        input(placeholder='아이디(4자 이상 8자 이하)', maxlength='8', name='id').joinId
                    div
                        button(type='button').checkIdBtn 중복 체크
                div
                    input(type='password', maxlength='20',placeholder='비밀번호(10자 이상)', name='password', onkeyup="removeSpace(this);").joinPass
                div
                    input(type='password', maxlength='20',placeholder='비밀번호 확인', onkeyup="removeSpace(this);").joinRePass
                div
                    select(name="grade")
                        option(value="N") 일반(민원)
                        option(value="P") 공무원
                div(style="text-align:right")
                    button(type='button').joinBtn 가입



-----------------------------------------------------------------------------------------------------------------------------------------

로그아웃처리하면됨






20200619



dumpReport.js 모델 컬럼(form)

id (서버에서 session 추가)

date(날짜 시간, 서버에서 추가)

address

(map(api로 입력된 주소 위치 표시))

title

description

img

confirm(검토 여부)

complete(민원 처리 여부)


-----------------------------------------include-head.css-------------------------------아래


.headerTitle {
  font-weight: bold;
  text-align: center;
  font-size: xx-large;
  background-color: coral;
  padding: 30px;
}

.nav-link {
  font-size: large;
  text-decoration: none;
  color: black;
  transition: 0.7s;
}

.nav-link:hover {
  font-weight: bold;
  color: black;
  text-decoration: underline;
  text-decoration-color: coral;
}

.displayUserId:hover {
  font-weight: unset;
}

.headerTitle:hover {
  cursor: pointer;
}



-------------------------------------------------------------------------------------------------------


-------------------------------------------------dumpReport.js---------------------------------------------

var mongoose = require("mongoose");
var reportModel = mongoose.Schema({
  id: {
    type: String,
    required: true,
    maxlength: 8,
  },

  date: {
    type: String,
    required: true,
  },

  address: {
    type: String,
    required: true,
  },

  title: {
    type: String,
    required: true,
  },

  description: {
    type: String,
  },

  originalImg: {
    type: String,
  },

  uploadImg: {
    type: String,
  },

  confirm: {
    type: Boolean,
    default: false,
  },

  complete: {
    type: Boolean,
    default: false,
  },
});

module.exports = mongoose.model("tbl_report", reportModel);


---------------------------------------------------------------------------------------------------------


---------------------------------------memberRouter.js-------------------------------------------------------

var express = require("express");
var router = express.Router();
var memberVO = require("../models/member");

const bcrypt = require("bcrypt");
const saltRounds = 10;

router.get("/login", function (req, res) {
  // let session = req.session;
  res.render("login");
});

router.post("/login", async function (req, res, next) {
  console.log(JSON.stringify(req.body));

  let id = req.body.id;
  let password = req.body.password;

  memberVO.findOne(
    {
      id: id,
    },
    // db select 후 result(data)값 size(length) 추출법
    function (err, data) {
      console.log("SELECT: " + data);

      if (!bcrypt.compareSync(password, data.password)) {
        console.log("IF진입");
        res.end("FAIL");
      } else {
        req.session.userid = data.id;
        req.session.grade = data.grade;
        res.end("LOGINOK");
        console.log(data.id);

        //res.render();
      }
    }
  );
});

router.get("/logout", function (req, res) {
  req.session.destroy();
  res.clearCookie("sid");
  res.redirect("/member/login");
});

router.post("/checkid", function (req, res) {
  console.log(req.body.id);

  memberVO.findOne({ id: req.body.id }, function (err, data) {
    if (data == null) {
      res.end("CHECKOK");
    }
    res.end("NO");
  });
});

router.post("/join", function (req, res) {
  let id = req.body.id.replace(/ /g, "");
  let password = req.body.password.replace(/ /g, "");
  let grade = req.body.grade.replace(/ /g, "");

  console.log(JSON.stringify(req.body));

  // server에서 2차 검사
  if (
    id.length > 8 ||
    id.length < 4 ||
    password.length < 10 ||
    password.length > 20 ||
    !grade == "N" ||
    !grade == "P"
  ) {
    res.redirect("/member/login");
  }

  console.log("검증통과");

  console.log("생성완료" + JSON.stringify(joinMemberVO));

  req.body.password = bcrypt.hashSync(req.body.password, saltRounds);

  console.log("암호화: " + req.body.password);
  //req.body.id = "asdfgjklq";

  // 생성되는 시점에 틀 뿐만 아니라 내용도 들어감 그렇기 때문에 req.body 전부 수정된 후(테이블에 넣기 바로 전)
  var joinMemberVO = new memberVO(req.body);

  joinMemberVO.save(req.body, function (err, data) {
    res.redirect("/");
  });
});

module.exports = router;

------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------reportRouter.js------------------------------------------

var express = require("express");
var router = express.Router();

router.get("/dumpreport", function (req, res) {
  console.log("그레이드: " + req.session.grade);

  if (!req.session.grade == "N" || req.session.grade == undefined) {
    console.log("진입");

    res.render("alert_page", { MSG: "일반 민원 계정으로 로그인이 필요합니다" });
  } else {
    res.render("write_dump_report");
  }
});

module.exports = router;


---------------------------------------------------------------------------------------------------------------


------------------------------------------------alert_page.pug---------------------------------------------

include include-head


script.
  
    
    alert('!{MSG}')
    document.location.href = '/'


--------------------------------------------------------------------------------------------------




202006261044


------------------------------------------write_dump_report.css--------------------------------------------

.writeBoxDiv {
  border: 2px solid coral;
  box-shadow: 2px;
  width: 70%;
  margin: 0 auto;
  box-shadow: 5px 5px 5px coral;
  margin-top: 5%;
  padding: 20px;
}

.paragraphDiv {
  padding: 10px;
}

.findAddrBtn {
  font-size: small;
}

.address {
  width: 70%;
}

#map {
  display: none;
  max-width: 800px;
  max-height: 700px;
  width: 300;
  height: 200px;
}

.preImg {
  max-width: 200;
  border: 1px solid;
}

.preImg::after {
  content: "ㅇㅇ";
}


--------------------------------------------------------------------------------------------------------------------

---------------------------------------------------write_dump_report.pug----------------------------------------------

include include-head

script(src='//dapi.kakao.com/v2/maps/sdk.js?appkey=fec4d99316e52193dbce501d153897b3')

style
    include ../css/write_dump_report.css

script.

    var openWin
    var map

    function openChild(){
        
        // window.name = '부모창'
        window.name = 'parentForm'

        openWin = window.open('/report/findaddr', 'childForm', 'width=640, height=600, resizable=no' ) 
    }

   
    document.addEventListener('DOMContentLoaded',function(event){
        
    var container = document.getElementById('map')
    var options = {
            center:new kakao.maps.LatLng(33.450701, 126.570667),
            level:3
    };
     
    map = new kakao.maps.Map(container, options);



    })


    function setCenter(){

            var pointX = document.getElementById('pointX').value
            var pointY = document.getElementById('pointY').value
           

        var container = document.getElementById('map')
        var options = {
            center:new kakao.maps.LatLng(pointY, pointX),
            level:3
    };
         
         markerPosition = new kakao.maps.LatLng(pointY,pointX)

         var marker = new kakao.maps.Marker({
             position : markerPosition
         })

         document.getElementById('map').style.display = 'block'
         map = new kakao.maps.Map(container, options);
         marker.setMap(map)
         
    }

    function previewImg(event){
        

        for(var image of event.target.files){
            var reader = new FileReader()

            reader.onload = function(event){
                var img = document.createElement('img')
                img.setAttribute('src', event.target.result)
                img.setAttribute('class', 'preImg')
                document.querySelector('.previewImg').appendChild(img)
            }
            console.log(image)
            reader.readAsDataURL(image)
        }
    }

    

div.writeBoxDiv
    form()
        div.paragraphDiv
            span 작성자:
            input.reportId(value=userid, readonly='readonly')
        div.paragraphDiv
            span 주소:
            button.findAddrBtn(type='button', onclick='openChild()') 주소찾기
            br
            input#address.address(readonly='readonly')
            input#pointX(type='hidden' readonly='readonly')
            input#pointY(type='hidden' readonly='readonly')
        div.paragraphDiv
            div#map
        div.paragraphDiv
            div 사진 올리기
            input.fileUpInput(type='file' onchange='previewImg(event)' multiple)
            div.previewImg    
        

---------------------------------------------------------------------------------------------------------------------